import{ShaderMaterial as A,UniformsUtils as I,Color as g,Vector3 as C,Mesh as Q,ShaderLib as B,BufferGeometry as i,InterleavedBuffer as E,BufferAttribute as o,InterleavedBufferAttribute as e,Sphere as h,Group as t,DataTexture as s,RGBFormat as D,UnsignedByteType as a,RedFormat as r,FloatType as c,sRGBEncoding as n}from"three";class N extends Q{static getMaterial(){const{uniforms:Q,vertexShader:i,fragmentShader:E}=B.basic;return new A({uniforms:{...I.clone(Q),aoEnabled:{value:!0},aoIntensity:{value:.05},colors:{value:[...Array(6)].map(((A,I)=>(new g).setScalar(I/5)))},colorsEnabled:{value:!0},colorMapOffset:{value:new C},colorMapSize:{value:new C}},vertexShader:i.replace("#include <common>",["attribute float data;","uniform vec3 colors[6];","uniform bool aoEnabled;","uniform float aoIntensity;","uniform bool colorsEnabled;","uniform vec3 colorMapOffset;","uniform vec3 colorMapSize;","const vec2 uvoffset[4] = vec2[4](vec2(0.5, -0.5), vec2(-0.5, -0.5), vec2(-0.5, 0.5), vec2(0.5, 0.5));","#include <common>"].join("\n")).replace("#include <uv_vertex>",["int corner = int(data) >> 4;","vUv.xy = (position.xz + colorMapOffset.xz + uvoffset[corner]) / colorMapSize.xz;","vUv.y = 1.0 - vUv.y;"].join("\n")).replace("#include <color_vertex>",["vColor.xyz = vec3(1.0);","if (aoEnabled) {","  float ao = float(int(data) & 0xF) * aoIntensity;","  vColor.xyz -= ao;","}","if (colorsEnabled) {","  float colorStep = (position.y + colorMapOffset.y) / colorMapSize.y * 5.0;","  vColor.xyz *= mix(colors[int(floor(colorStep))], colors[int(ceil(colorStep))], fract(colorStep));","}"].join("\n")),fragmentShader:E,vertexColors:!0})}constructor({x:A,y:I,z:g,geometry:Q,material:B,origin:E}){super(new i,B),this.update(Q),this.colorMapOffset=new C(A,I,g),this.position.set(E.x+A,I,E.z+g),this.updateMatrixWorld(),this.matrixAutoUpdate=!1}dispose(){const{geometry:A}=this;A.dispose()}onBeforeRender(){const{colorMapOffset:A,material:I}=this;I.uniforms.colorMapOffset.value.copy(A),I.uniformsNeedUpdate=!0}update({bounds:A,indices:I,vertices:g}={}){if(!I||!I.length)return void(this.visible=!1);const{geometry:C}=this;g=new E(g,4),C.setIndex(new o(I,1)),C.setAttribute("position",new e(g,3,0)),C.setAttribute("data",new e(g,1,3)),null===C.boundingSphere&&(C.boundingSphere=new h),C.boundingSphere.set({x:A[0],y:A[1],z:A[2]},A[3]),this.visible=!0}}function w(A){return function(A,I,g,C){function Q(A,I,g){var C=g?WebAssembly.instantiateStreaming:WebAssembly.instantiate,Q=g?WebAssembly.compileStreaming:WebAssembly.compile;return I?C(A,I):Q(A)}var B=null,i="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node;if(I&&i){var E=require("fs"),o=require("path");return new Promise(((A,g)=>{E.readFile(o.resolve(__dirname,I),((I,B)=>{null!=I&&g(I),A(Q(B,C,!1))}))}))}if(I)return Q(fetch(I),C,!0);if(i)B=Buffer.from(g,"base64");else{var e=globalThis.atob(g),h=e.length;B=new Uint8Array(new ArrayBuffer(h));for(var t=0;t<h;t++)B[t]=e.charCodeAt(t)}if(A){var s=new WebAssembly.Module(B);return C?new WebAssembly.Instance(s,C):s}return Q(B,C,!1)}(0,null,"",A)}class y{constructor({width:A,height:I,depth:g,chunkHeight:C=128,chunkSize:Q=32,onLoad:B}){if(A%Q||g%Q)throw new Error("width and depth must be multiples of chunkSize");this.chunks={x:A/Q,z:g/Q},this.chunkHeight=C,this.chunkSize=Q,this.width=A,this.height=I,this.depth=g;const i=Math.ceil(Q*Q*.5)*(4*Math.min(I,255)+1),E=[{id:"bounds",type:Float32Array,size:4},{id:"heightmap",type:Float32Array,size:A*g},{id:"vertices",type:Uint8Array,size:4*i*4},{id:"indices",type:Uint32Array,size:6*i},{id:"world",type:Int32Array,size:3}],o=Math.ceil(E.reduce(((A,{type:I,size:g})=>A+g*I.BYTES_PER_ELEMENT),0)/65536)+2,e=new WebAssembly.Memory({initial:o,maximum:o});w().then((C=>WebAssembly.instantiate(C,{env:{memory:e}}).then((C=>{this.memory=E.reduce(((A,{id:I,type:g,size:Q})=>{const B=C.exports.malloc(Q*g.BYTES_PER_ELEMENT);return A[I]={address:B,view:new g(e.buffer,B,Q)},A}),{}),this.memory.world.view.set([A,I,g]),this._mesh=C.exports.mesh,B()}))))}mesh(A,I,g){const{chunkHeight:C,chunkSize:Q,memory:B,_mesh:i}=this,E=i(B.world.address,B.heightmap.address,B.bounds.address,B.indices.address,B.vertices.address,C,Q,A*Q,I*C,g*Q);if(-1===E)throw new Error("requested chunk is out of bounds");return 0!==E&&{bounds:new Float32Array(B.bounds.view),indices:new(4*E-1<=65535?Uint16Array:Uint32Array)(B.indices.view.subarray(0,6*E)),vertices:new Uint8Array(B.vertices.view.subarray(0,4*E*4))}}}class G extends t{constructor({width:A,height:I,depth:g,generator:Q,maps:B={},onLoad:i}){super(),this.auxVector=new C;const E=new y({width:A,height:I,depth:g,onLoad:()=>{this.maps={color:new s(new Uint8Array(E.width*E.depth*3).fill(255),E.width,E.depth,D,a),height:new s(E.memory.heightmap.view,E.width,E.depth,r,c)},this.maps.color.encoding=n,this.maps.color.flipY=this.maps.height.flipY=!0,this.material=N.getMaterial(),this.material.map=this.material.uniforms.map.value=this.maps.color,this.material.uniforms.colorMapSize.value.set(E.width,E.height+1,E.depth),this.mesher=E,this.origin=new C(-.5*E.width,0,-.5*E.depth),Promise.all(Object.keys(B).reduce(((A,I)=>(A.push(this.load({map:I,url:B[I]}).catch((()=>{}))),A)),[])).then((()=>{Q&&Q(this),this.chunks=[];for(let A=0;A<E.chunks.z;A++)for(let I=0;I<E.chunks.x;I++){const g=[];for(let C=0;C<Math.ceil((E.height+1)/E.chunkHeight);C++){const Q=new N({x:I*E.chunkSize,y:C*E.chunkHeight,z:A*E.chunkSize,geometry:E.mesh(I,C,A),material:this.material,origin:this.origin});g.push(Q),this.add(Q)}this.chunks.push(g)}i&&i()}))}})}dispose(){const{chunks:A,maps:I,material:g}=this;A&&A.forEach((A=>A.forEach((A=>A.dispose())))),I&&(I.color.dispose(),I.height.dispose()),g&&g.dispose()}getHeight(A){const{auxVector:I,mesher:g,origin:C}=this;if(!g)return A.y;this.worldToLocal(I.copy(A)).sub(C).floor();const{x:Q,z:B}=I;return Q<0||Q>=g.width||B<0||B>=g.depth?I.y=0:I.y=Math.round(g.height*g.memory.heightmap.view[B*g.width+Q]),this.localToWorld(I).y}load({map:A,url:I}){const{maps:g,mesher:C}=this;if(!C)return Promise.reject();if(!this.renderer){const A=document.createElement("canvas");A.width=C.width,A.height=C.depth,this.renderer={canvas:A,ctx:A.getContext("2d")}}const{canvas:Q,ctx:B}=this.renderer;return new Promise(((C,i)=>{const E=new Image;E.crossOrigin="anonymous",E.onload=()=>{let I,i,o,e;E.width/E.height<Q.width/Q.height?(o=Q.width,e=E.height*o/E.width,I=0,i=.5*Q.height-.5*e):(e=Q.height,o=E.width*e/E.height,I=.5*Q.width-.5*o,i=0),B.clearRect(0,0,Q.width,Q.height),B.drawImage(E,0,0,E.width,E.height,I,i,o,e);const{data:h}=B.getImageData(0,0,Q.width,Q.height);for(let I=0,C=0,Q=0,B=h.length;I<B;I+=4,C+=3,Q++){const B=h[I+3]/255;["colorRGB","colorRGBheightAlpha","colorRGBheightRGB"].includes(A)&&g.color.image.data.set([h[I]*("colorRGBheightAlpha"===A?1:B),h[I+1]*("colorRGBheightAlpha"===A?1:B),h[I+2]*("colorRGBheightAlpha"===A?1:B)],C),["heightRGB","colorRGBheightRGB"].includes(A)&&(g.height.image.data[Q]=(.21*h[I]+.71*h[I+1]+.07*h[I+2])/255*B),["heightAlpha","colorRGBheightAlpha"].includes(A)&&(g.height.image.data[Q]=B),"heightR"===A&&(g.height.image.data[Q]=h[I]/255)}["colorRGB","colorRGBheightAlpha","colorRGBheightRGB"].includes(A)&&(g.color.needsUpdate=!0),["heightAlpha","heightR","heightRGB","colorRGBheightAlpha","colorRGBheightRGB"].includes(A)&&(g.height.needsUpdate=!0,this.remesh()),C()},E.onerror=()=>{i()},E.src=I}))}remesh(A){const{chunks:I,mesher:g}=this;if(!I)return;if(!A){for(let A=0,C=0;A<g.chunks.z;A++)for(let Q=0;Q<g.chunks.x;Q++,C++)I[C].forEach(((I,C)=>I.update(g.mesh(Q,C,A))));return}const C=Math.max(Math.floor(A.x*g.width/g.chunkSize)-1,0),Q=Math.max(Math.floor(A.y*g.depth/g.chunkSize)-1,0),B=Math.min(C+2,g.chunks.x-1),i=Math.min(Q+2,g.chunks.z-1);for(let A=Q;A<=i;A++)for(let Q=C;Q<=B;Q++)I[A*g.chunks.x+Q].forEach(((I,C)=>I.update(g.mesh(Q,C,A))))}}export{G as default};
